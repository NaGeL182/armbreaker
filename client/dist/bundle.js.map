{"version":3,"sources":["webpack:///webpack/bootstrap 773cfa1a10aa73f25436","webpack:///./src/utility.js","webpack:///external \"moment\"","webpack:///external \"d3\"","webpack:///./src/main.js","webpack:///./src/script.js","webpack:///./src/damerau-levenshtein.js","webpack:///./src/js-levenshtein.js","webpack:///./d3.slider/d3.slider.js","webpack:///./src/View-PerDay.js","webpack:///./src/View-User.js","webpack:///./src/View-FirstImpressions.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7DA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW,kCAAkC,IAAI,gCAAgC;AACjF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;ACzNA,wB;;;;;;ACAA,oB;;;;;;;;;;;;;;;;;;;;ACAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yDAAwB,MAAM;AAC9B;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA,eAAe;AAAA;AAAA;AAAA;AAAA,iHAA0H,uBAAuB,gBAAgB,uBAAuB,IAAI,yBAAyB,SAAS,gBAAgB,gBAAgB,cAAc,EAAE,kBAAkB,cAAc,uBAAuB,aAAa,SAAS,cAAc,yDAAyD,aAAa,oDAAoD,6BAA6B,oBAAoB,uBAAuB,wEAAwE,6DAA6D,QAAQ,IAAI,0BAA0B,EAAE,MAAM,gBAAgB,kCAAkC,mCAAmC,0CAA0C,kCAAkC,qFAAqF,sHAAsH,KAAK,KAAK,KAAK,KAAK,uCAAuC,eAAe,qCAAqC,IAAI,oBAAoB,IAAI,uBAAuB,IAAI,yBAAyB,aAAa,SAAS,uBAAuB,cAAc,mBAAmB,YAAY,mBAAmB,iCAAiC,gBAAgB,oBAAoB,YAAY,GAAG,C;;;;;;ACLz9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,SAAS;AAC5B;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;;AAEA,mBAAmB,QAAQ;AAC3B;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;ACzCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,QAAQ;AAClB;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;AC1FA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,yCAAyC;AAC3D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,UAAU,EAAE;AACzD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;;;AAGjB;AACA;AACA;AACA;;AAEA;AACA;;AAEA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;;;;;;;;;;;;;;;AC/UA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,iDAAiD;AACjD;AACA;;AAEA,aAAa;AACb;AACA;AACA,sDAAsD;;AAEtD;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,kDAAkD;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC,cAAc,IAAI,gBAAgB;AACxE;AACA;AACA;AACA;AACA,yCAAyC,YAAY;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6DACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA,yCAAyC,qCAAqC;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,sBAAsB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,qCAAqC;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC,EAAE,GAAG,OAAO;AACjD,MAAM;;AAEN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,2CAA2C,sBAAsB;;AAEjE;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;;;AC3VA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,wBAAwB;;AAExB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,6BAA6B;AAC9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,sCAAsC,4DAA4D;AAClG;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,cAAc,IAAI,gBAAgB;AACrE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6B;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,8DAA8D;AACxF,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,+CAA+C;AAC5F;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,KAAK;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;;;ACpRA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,2BAA2B;AAC3B;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA,wDAA0B,kBAAkB;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qCAAqC,cAAc,IAAI,gBAAgB;AACvE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAwC,YAAY;AACpD,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,6DACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,eAAe,GAAG,mBAAmB;AAChE,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,C","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 773cfa1a10aa73f25436","\"use strict\";\r\n\r\nimport \"damerau-levenshtein.js\";\r\nimport \"js-levenshtein.js\";\r\n\r\n// keyfunc is applied to each object before comparing.\r\nexport function arrmin(arr, keyfunc) {\r\n\tif (keyfunc == undefined) {\r\n\t\tkeyfunc = d=>d;\r\n\t}\r\n\treturn arr.reduce((a, b)=>{\r\n\t\t// return the smaller object\r\n\t\treturn keyfunc(a) > keyfunc(b) ? b : a;\r\n\t})\r\n}\r\n\r\n// keyfunc is applied to each object before comparing.\r\nexport function arrmax(arr, keyfunc) {\r\n\tif (keyfunc == undefined) {\r\n\t\tkeyfunc = d=>d;\r\n\t}\r\n\treturn arr.reduce((a, b)=>{\r\n\t\t// return the larger object\r\n\t\treturn keyfunc(a) > keyfunc(b) ? a : b;\r\n\t})\r\n}\r\n\r\nexport function arrsum(arr, keyfunc) {\r\n\tif (keyfunc == undefined) {\r\n\t\tkeyfunc = d=>d;\r\n\t}\r\n\treturn arr.reduce((accum, curr)=>{\r\n\t\t// return the larger object\r\n\t\treturn accum + keyfunc(curr);\r\n\t}, 0)\r\n}\r\n\r\nexport function arrsort(arr, reverse, keyfunc) {\r\n\tif (keyfunc == undefined) {\r\n\t\tkeyfunc = d=>d;\r\n\t}\r\n\tif (reverse) {\r\n\t\treturn arr.sort((a, b)=>{\r\n\t\t\ta = keyfunc(a);\r\n\t\t\tb = keyfunc(b);\r\n\t\t\tif (a > b) return -1;\r\n\t\t\tif (a < b) return 1;\r\n\t\t\treturn 0;\r\n\t\t});\r\n\t}\r\n\treturn arr.sort((a, b)=>{\r\n\t\ta = keyfunc(a);\r\n\t\tb = keyfunc(b);\r\n\t\tif (a > b) return 1;\r\n\t\tif (a < b) return -1;\r\n\t\treturn 0;\r\n\t});\r\n}\r\n\r\n// As indexOf, but accepts an accessor function\r\nexport function indexOfKey(value, array, accessor) {\r\n\tif (accessor == undefined)\r\n\t\taccessor = x=>x;\r\n\tfor (let i = 0; i < array.length; i++) {\r\n\t\tif (accessor(array[i]) == value)\r\n\t\t\treturn i;\r\n\t}\r\n\treturn -1;\r\n}\r\n\r\n// truncate so there are only n digits\r\nexport function n_digits(x, n) {\r\n\tlet e = Math.pow(10, n);\r\n\treturn Math.floor(e * x) / e;\r\n}\r\n\r\nexport function getDate(timestr) {\r\n\treturn moment(timestr).startOf(\"day\");\r\n}\r\n\r\n// accept a Moment obj, return YYYY-MM-DD\r\nexport function getDateString(moment) {\r\n\treturn moment.format(\"YYYY-MM-DD\");\r\n}\r\n\r\nexport function getDateRangeString(moment_start, moment_end) {\r\n\treturn `${moment_start.format(\"YYYY-MM-DD\")}\\n${moment_end.format(\"YYYY-MM-DD\")}`;\r\n}\r\n\r\n// set all times to same date\r\nexport function makeTimeOnlyMoment(timestr) {\r\n\tlet m = moment(timestr);\r\n\tm.year(2015).month(0).date(15).day(\"Thursday\");\r\n\treturn m;\r\n}\r\n\r\n// good ol' text width estimator. i seriously use this everywhere\r\n// Taken from https://github.com/Skyyrunner/JeevesCoursePlanner/blob/master/client/typescript/utility.ts\r\n/**\r\n * Uses canvas.measureText to compute and return the width of the given text of given font in pixels.\r\n *\r\n * @param text The text to be rendered.\r\n * @param font The css font descriptor that text is to be rendered with (e.g. \"bold 14px verdana\").\r\n * @returns The estimated width of the text in pixels.\r\n *\r\n * @see http://stackoverflow.com/questions/118241/calculate-text-width-with-javascript/21015393#21015393\r\n */\r\nexport function getTextWidth (text, font) {\r\n\t// re-use canvas object for better performance\r\n\tvar canvas = getTextWidth.prototype.canvas || (getTextWidth.prototype.canvas = document.createElement(\"canvas\"));\r\n\tvar context = canvas.getContext(\"2d\");\r\n\tcontext.font = font;\r\n\tvar metrics = context.measureText(text);\r\n\treturn metrics.width;\r\n};\r\n\r\n/**\r\n * Uses `getTextWidth()` and a trial-and-error approach to fitting a given\r\n * string into a given area.\r\n * @param text The text to be rendered.\r\n * @param font The name of the font-family to render in.\r\n * @param target The target width.\r\n * @returns The appropriate font size so that the text is at most `target` pixels wide.\r\n */\r\nexport function findTextWidth(text, font, target) {\r\n\tvar size = 16;\r\n\tvar textsize = target * 10;\r\n\twhile (textsize > target) {\r\n\t\tsize -= 1;\r\n\t\ttextsize = getTextWidth(text, size + \"px \" + font);\r\n\t}\r\n\treturn size\r\n}\r\n\r\nvar TOLERENCE = 1;\r\nexport function levdist(a, b) {\r\n\tif (a == b) return 0;\r\n\tlet dist = levenshtein(a, b);\r\n\tif (dist == 0) return 0;\r\n\tif (dist <= TOLERENCE) {\r\n\t\t// return normal comparison if under tolerence\r\n\t\tif (a > b) return 1;\r\n\t\tif (a < b) return -1;\r\n\t\treturn 0;\r\n\t}\r\n\t// If the difference is too large, the one with the\r\n\t// greater significant digit is returned as first.\r\n\tfor (let i = a.length - 1; 0 <= i; i--) {\r\n\t\t// keep looping until digit isn't same\r\n\t\tif (a[i] != b[i]) {\r\n\t\t\tif (a[i] == \"x\") return 1;\r\n\t\t\treturn -1; // case of b[i] == \"x\"\r\n\t\t}\r\n\t}\r\n\t// shouldn't get here\r\n\tthrow(\"levdist somehow reached end of function.\");\r\n}\r\n\r\nexport function getKeys(o) {\r\n\tlet out = [];\r\n\tfor (let key in o) {\r\n\t\tout.push(key);\r\n\t}\r\n\treturn out;\r\n}\r\n\r\nexport function symbolcount(string, symbol) {\r\n\tlet re = new RegExp(symbol, \"g\");\r\n\treturn (string[1].match(re) || []).length;\r\n}\r\n\r\n// Put elements in first cluster that is under threshold\r\nexport function greedy_cluster(data, threshold, algo) {\r\n\tarrsort(data, d=>symbolcount(d[1], \"x\"));\r\n\tlet clusters = [];\r\n\tclusters.push([[...data[0], 0]]);\r\n\tfor(let el of data.slice(1)) {\r\n\t\tlet succeeded = false;\r\n\t\tfor (let cluster of clusters) {\r\n\t\t\tif (algo(el[1], cluster[0][1]) <= threshold) {\r\n\t\t\t\tcluster.push([...el, 0]);\r\n\t\t\t\tsucceeded = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// new cluster\r\n\t\tif (!succeeded) {\t\t\t\r\n\t\t\tclusters.push([[...el, 0]]);\r\n\t\t}\r\n\t}\r\n\treturn clusters;\r\n}\r\n\r\nexport function lufu_cluster(data, threshold, algo) {\r\n\tarrsort(data, d=>symbolcount(d[1], \"x\"));\r\n\tlet clusters = [];\r\n\tclusters.push([[...data[0], 0]]);\r\n\tfor(let el of data.slice(1)) {\r\n\t\tlet temp = [];\r\n\t\tfor (let cluster of clusters) {\r\n\t\t\t// find min score for this cluster\r\n\t\t\tlet min = Infinity;\r\n\t\t\tfor (let el2 of cluster) {\r\n\t\t\t\tlet score = algo(el[1], el2[1]);\r\n\t\t\t\tif (score < min)\r\n\t\t\t\t\tmin = score;\r\n\t\t\t}\r\n\t\t\ttemp.push([cluster, min]);\r\n\t\t}\r\n\t\t// find smallest\r\n\t\tlet min = arrmin(temp, d=>d[1]);\r\n\t\tif (min[1] <= threshold)\r\n\t\t\tmin[0].push([...el, 0]);\r\n\t\telse\r\n\t\t\tclusters.push([[...el, 0]]);\r\n\t}\r\n\treturn clusters;\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utility.js\n// module id = 0\n// module chunks = 0","module.exports = moment;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"moment\"\n// module id = 1\n// module chunks = 0","module.exports = d3;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"d3\"\n// module id = 2\n// module chunks = 0","\"use strict\";\r\n\r\nimport $script from \"script.js\"\r\nimport * as utility from \"utility\";\r\nimport \"../d3.slider/d3.slider.js\";\r\nimport * as moment from \"moment\";\r\nimport * as d3 from \"d3\";\r\nimport PerDayView from \"View-PerDay\";\r\nimport UserView from \"View-User\";\r\nimport FirstImpressionsView from \"View-FirstImpressions\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", load);\r\nvar dataset;\r\n\r\nfunction load() {\r\n\t$script(\"https://cdnjs.cloudflare.com/ajax/libs/d3/4.11.0/d3.min.js\", \"d3\");\r\n\t$script(\"https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.19.2/moment.min.js\", \"moment\");\r\n\t$script.ready([\"d3\", \"moment\"], init);\r\n}\r\n\r\nfunction init() {\r\n\tlet url = window.location.href.split(\"/\");\r\n\tlet ficid = url[url.length - 1];\r\n\td3.json(`../api/fics/${ficid}`, (err, data)=>{\r\n\t\tdataset = data;\r\n\t\tsetup();\r\n\t});\r\n}\r\n\r\n// Initialize everything.\r\nfunction setup() {\r\n\td3.select(\"#title h1\").text(dataset.name);\r\n\tfor (let view of views) {\r\n\t\tview.setup();\r\n\t\tview.update();\r\n\t}\r\n\tvar views = [\r\n\t\tnew PerDayView(),\r\n\t\tnew UserView(),\r\n\t\tnew FirstImpressionsView()\r\n\t];\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main.js\n// module id = 3\n// module chunks = 0","/*!\r\n  * $script.js JS loader & dependency manager\r\n  * https://github.com/ded/script.js\r\n  * (c) Dustin Diaz 2014 | License MIT\r\n  */\r\n(function(e,t){typeof module!=\"undefined\"&&module.exports?module.exports=t():typeof define==\"function\"&&define.amd?define(t):this[e]=t()})(\"$script\",function(){function p(e,t){for(var n=0,i=e.length;n<i;++n)if(!t(e[n]))return r;return 1}function d(e,t){p(e,function(e){return t(e),1})}function v(e,t,n){function g(e){return e.call?e():u[e]}function y(){if(!--h){u[o]=1,s&&s();for(var e in f)p(e.split(\"|\"),g)&&!d(f[e],g)&&(f[e]=[])}}e=e[i]?e:[e];var r=t&&t.call,s=r?t:n,o=r?e.join(\"\"):t,h=e.length;return setTimeout(function(){d(e,function t(e,n){if(e===null)return y();!n&&!/^https?:\\/\\//.test(e)&&c&&(e=e.indexOf(\".js\")===-1?c+e+\".js\":c+e);if(l[e])return o&&(a[o]=1),l[e]==2?y():setTimeout(function(){t(e,!0)},0);l[e]=1,o&&(a[o]=1),m(e,y)})},0),v}function m(n,r){var i=e.createElement(\"script\"),u;i.onload=i.onerror=i[o]=function(){if(i[s]&&!/^c|loade/.test(i[s])||u)return;i.onload=i[o]=null,u=1,l[n]=2,r()},i.async=1,i.src=h?n+(n.indexOf(\"?\")===-1?\"?\":\"&\")+h:n,t.insertBefore(i,t.lastChild)}var e=document,t=e.getElementsByTagName(\"head\")[0],n=\"string\",r=!1,i=\"push\",s=\"readyState\",o=\"onreadystatechange\",u={},a={},f={},l={},c,h;return v.get=m,v.order=function(e,t,n){(function r(i){i=e.shift(),e.length?v(i,r):v(i,t,n)})()},v.path=function(e){c=e},v.urlArgs=function(e){h=e},v.ready=function(e,t,n){e=e[i]?e:[e];var r=[];return!d(e,function(e){u[e]||r[i](e)})&&p(e,function(e){return u[e]})?t():!function(e){f[e]=f[e]||[],f[e][i](t),n&&n(r)}(e.join(\"|\")),v},v.done=function(e){v([null],e)},v})\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/script.js\n// module id = 4\n// module chunks = 0","/**\r\n * Calculates the Damerau-Levenshtein distance between two strings.\r\n * Source: https://gist.github.com/IceCreamYou/8396172\r\n */\r\nfunction damerau(a, b) {\r\n    let source = a;\r\n    let target = b;\r\n    if (!source) return target ? target.length : 0;\r\n    else if (!target) return source.length;\r\n\r\n    var m = source.length, n = target.length, INF = m+n, score = new Array(m+2), sd = {};\r\n    for (var i = 0; i < m+2; i++) score[i] = new Array(n+2);\r\n    score[0][0] = INF;\r\n    for (var i = 0; i <= m; i++) {\r\n        score[i+1][1] = i;\r\n        score[i+1][0] = INF;\r\n        sd[source[i]] = 0;\r\n    }\r\n    for (var j = 0; j <= n; j++) {\r\n        score[1][j+1] = j;\r\n        score[0][j+1] = INF;\r\n        sd[target[j]] = 0;\r\n    }\r\n\r\n    for (var i = 1; i <= m; i++) {\r\n        var DB = 0;\r\n        for (var j = 1; j <= n; j++) {\r\n            var i1 = sd[target[j-1]],\r\n                j1 = DB;\r\n            if (source[i-1] === target[j-1]) {\r\n                score[i+1][j+1] = score[i][j];\r\n                DB = j;\r\n            }\r\n            else {\r\n                score[i+1][j+1] = Math.min(score[i][j], Math.min(score[i+1][j], score[i][j+1])) + 1;\r\n            }\r\n            score[i+1][j+1] = Math.min(score[i+1][j+1], score[i1] ? score[i1][j1] + (i-i1-1) + 1 + (j-j1-1) : Infinity);\r\n        }\r\n        sd[source[i-1]] = i;\r\n    }\r\n    return score[m+1][n+1];\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/damerau-levenshtein.js\n// module id = 5\n// module chunks = 0","// This file is https://www.npmjs.com/package/js-levenshtein\r\n// but changed to be vanilla Javascript rather than npm format.\r\n\r\nfunction _min(d0, d1, d2, bx, ay) {\r\n    return d0 < d1 || d2 < d1 ?\r\n        d0 > d2 ?\r\n        d2 + 1 :\r\n        d0 + 1 :\r\n        bx === ay ?\r\n        d1 :\r\n        d1 + 1;\r\n}\r\n\r\nfunction levenshtein(a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    if (a.length > b.length) {\r\n        var tmp = a;\r\n        a = b;\r\n        b = tmp;\r\n    }\r\n    var la = a.length;\r\n    var lb = b.length;\r\n    while (la > 0 && (a.charCodeAt(la - 1) === b.charCodeAt(lb - 1))) {\r\n        la--;\r\n        lb--;\r\n    }\r\n    var offset = 0;\r\n    while (offset < la && (a.charCodeAt(offset) === b.charCodeAt(offset))) {\r\n        offset++;\r\n    }\r\n    la -= offset;\r\n    lb -= offset;\r\n    if (la === 0 || lb === 1) {\r\n        return lb;\r\n    }\r\n    var x = 0;\r\n    var y;\r\n    var d0;\r\n    var d1;\r\n    var d2;\r\n    var d3;\r\n    var dd;\r\n    var dy;\r\n    var ay;\r\n    var bx0;\r\n    var bx1;\r\n    var bx2;\r\n    var bx3;\r\n    var vector = [];\r\n    for (y = 0; y < la; y++) {\r\n        vector.push(y + 1);\r\n        vector.push(a.charCodeAt(offset + y));\r\n    }\r\n    for (;\r\n        (x + 3) < lb;) {\r\n        bx0 = b.charCodeAt(offset + (d0 = x));\r\n        bx1 = b.charCodeAt(offset + (d1 = x + 1));\r\n        bx2 = b.charCodeAt(offset + (d2 = x + 2));\r\n        bx3 = b.charCodeAt(offset + (d3 = x + 3));\r\n        dd = (x += 4);\r\n        for (y = 0; y < vector.length; y += 2) {\r\n            dy = vector[y];\r\n            ay = vector[y + 1];\r\n            d0 = _min(dy, d0, d1, bx0, ay);\r\n            d1 = _min(d0, d1, d2, bx1, ay);\r\n            d2 = _min(d1, d2, d3, bx2, ay);\r\n            dd = _min(d2, d3, dd, bx3, ay);\r\n            vector[y] = dd;\r\n            d3 = d2;\r\n            d2 = d1;\r\n            d1 = d0;\r\n            d0 = dy;\r\n        }\r\n    }\r\n    for (; x < lb;) {\r\n        bx0 = b.charCodeAt(offset + (d0 = x));\r\n        dd = ++x;\r\n        for (y = 0; y < vector.length; y += 2) {\r\n            dy = vector[y];\r\n            vector[y] = dd = dy < d0 || dd < d0 ?\r\n                dy > dd ? dd + 1 : dy + 1 :\r\n                bx0 === vector[y + 1] ?\r\n                d0 :\r\n                d0 + 1;\r\n            d0 = dy;\r\n        }\r\n    }\r\n    return dd;\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js-levenshtein.js\n// module id = 6\n// module chunks = 0","d3.slider = function module() {\r\n    \"use strict\";\r\n\r\n    var div, min = 0, max = 100, svg, svgGroup, value, classPrefix, axisGroup,\r\n        height = 40, rect,\r\n        rectHeight = 12,\r\n        tickSize = 6,\r\n        margin = {top: 25, right: 25, bottom: 15, left: 25},\r\n        ticks = 0, tickValues, scale, tickFormat, dragger, width,\r\n        range = false,\r\n        resizeInterval = 100,\r\n        resizeTimer,\r\n        callbackFn, stepValues, focus\r\n\r\n    function slider(selection) {\r\n        selection.each(function () {\r\n            div = d3.select(this).classed('d3slider', true);\r\n            width = parseInt(div.style(\"width\"), 10) - (margin.left\r\n                + margin.right);\r\n\r\n            value = value || min;\r\n            scale = d3.scaleLinear().domain([min, max]).range([0, width])\r\n                .clamp(true);\r\n\r\n            // SVG\r\n            svg = div.append(\"svg\")\r\n                .attr(\"class\", \"d3slider-axis\")\r\n                .attr(\"width\", width + margin.left + margin.right)\r\n                .attr(\"height\", height + margin.top + margin.bottom);\r\n\r\n            svgGroup = svg\r\n                .append(\"g\")\r\n                .attr(\"transform\", \"translate(\" + margin.left +\r\n                    \",\" + margin.top + \")\");\r\n\r\n            // Range rect\r\n            svgGroup.append(\"rect\")\r\n                .attr(\"class\", \"d3slider-rect-range\")\r\n                .attr(\"width\", width)\r\n                .attr(\"height\", rectHeight);\r\n\r\n            // Range rect\r\n            if (range) {\r\n                svgGroup.append(\"rect\")\r\n                    .attr(\"class\", \"d3slider-rect-value\")\r\n                    .attr(\"width\", scale(value))\r\n                    .attr(\"height\", rectHeight);\r\n            }\r\n\r\n            // Axis\r\n            var axis = slider.getAxis();\r\n            axisGroup = svgGroup.append(\"g\")\r\n                .attr(\"transform\", \"translate(0,\" + rectHeight + \")\")\r\n                .call(axis)\r\n            //.selectAll(\".tick\")\r\n            //.data(tickValues, function(d) { return d; })\r\n            //.exit()\r\n            //.classed(\"minor\", true);\r\n\r\n            var values = [value];\r\n            dragger = svgGroup.selectAll(\".dragger\")\r\n                .data(values)\r\n                .enter()\r\n                .append(\"g\")\r\n                .attr(\"class\", \"dragger\")\r\n                .attr(\"transform\", function (d) {\r\n                    return \"translate(\" + scale(d) + \")\";\r\n                })\r\n\r\n            var displayValue = null;\r\n            if (tickFormat) {\r\n                displayValue = tickFormat(value);\r\n            } else {\r\n                displayValue = d3.format(\",.0f\")(value);\r\n            }\r\n\r\n            dragger.append(\"text\")\r\n                .attr(\"x\", 0)\r\n                .attr(\"y\", -15)\r\n                .attr(\"text-anchor\", \"middle\")\r\n                .attr(\"class\", \"draggertext\")\r\n                .text(displayValue);\r\n\r\n            dragger.append(\"circle\")\r\n                .attr(\"class\", \"dragger-outer\")\r\n                .attr(\"r\", 10)\r\n                .attr(\"transform\", function (d) {\r\n                    return \"translate(0,6)\";\r\n                });\r\n\r\n            dragger.append(\"circle\")\r\n                .attr(\"class\", \"dragger-inner\")\r\n                .attr(\"r\", 4)\r\n                .attr(\"transform\", function (d) {\r\n                    return \"translate(0,6)\";\r\n                });\r\n\r\n\r\n            // Enable dragger drag\r\n            var dragBehaviour = d3.drag();\r\n            dragBehaviour.on(\"drag\", slider.drag);\r\n            dragger.call(dragBehaviour);\r\n\r\n            // Move dragger on click\r\n            svgGroup.on(\"click\", slider.click);\r\n\r\n        });\r\n    }\r\n\r\n    slider.draggerTranslateFn = function () {\r\n        return function (d) {\r\n            return \"translate(\" + scale(d) + \")\";\r\n        }\r\n    };\r\n\r\n    slider.click = function () {\r\n        var pos = d3.event.offsetX || d3.event.layerX;\r\n        slider.move(pos);\r\n    };\r\n\r\n    slider.drag = function () {\r\n        var pos = d3.event.x;\r\n        slider.move(pos + margin.left);\r\n    };\r\n\r\n    slider.move = function (pos) {\r\n        var l, u;\r\n        var newValue = scale.invert(pos - margin.left);\r\n        // find tick values that are closest to newValue\r\n        // lower bound\r\n        if (stepValues != undefined) {\r\n            l = stepValues.reduce(function (p, c, i, arr) {\r\n                if (c < newValue) {\r\n                    return c;\r\n                } else {\r\n                    return p;\r\n                }\r\n            });\r\n\r\n            // upper bound\r\n            if (stepValues.indexOf(l) < stepValues.length - 1) {\r\n                u = stepValues[stepValues.indexOf(l) + 1];\r\n            } else {\r\n                u = l;\r\n            }\r\n            // set values\r\n            var oldValue = value;\r\n            value = ((newValue - l) <= (u - newValue)) ? l : u;\r\n        } else {\r\n            var oldValue = value;\r\n            value = newValue;\r\n        }\r\n        var values = [value];\r\n\r\n        // Move dragger\r\n        svgGroup.selectAll(\".dragger\").data(values)\r\n            .attr(\"transform\", function (d) {\r\n                return \"translate(\" + scale(d) + \")\";\r\n            });\r\n\r\n        var displayValue = null;\r\n        if (tickFormat) {\r\n            displayValue = tickFormat(value);\r\n        } else {\r\n            displayValue = d3.format(\",.0f\")(value);\r\n        }\r\n        svgGroup.selectAll(\".dragger\").select(\"text\")\r\n            .text(displayValue);\r\n\r\n        if (range) {\r\n            svgGroup.selectAll(\".d3slider-rect-value\")\r\n                .attr(\"width\", scale(value));\r\n        }\r\n\r\n        if (callbackFn) {\r\n            callbackFn(slider);\r\n        }\r\n    };\r\n\r\n    // Getter/setter functions\r\n    slider.min = function (_) {\r\n        if (!arguments.length) return min;\r\n        min = _;\r\n        return slider;\r\n    };\r\n\r\n    slider.max = function (_) {\r\n        if (!arguments.length) return max;\r\n        max = _;\r\n        return slider;\r\n    };\r\n\r\n    slider.classPrefix = function (_) {\r\n        if (!arguments.length) return classPrefix;\r\n        classPrefix = _;\r\n        return slider;\r\n    };\r\n\r\n    slider.tickValues = function (_) {\r\n        if (!arguments.length) return tickValues;\r\n        tickValues = _;\r\n        return slider;\r\n    };\r\n\r\n    slider.ticks = function (_) {\r\n        if (!arguments.length) return ticks;\r\n        ticks = _;\r\n        return slider;\r\n    };\r\n\r\n    slider.stepValues = function (_) {\r\n        if (!arguments.length) return stepValues;\r\n        stepValues = _;\r\n        return slider;\r\n    };\r\n\r\n    slider.tickFormat = function (_) {\r\n        if (!arguments.length) return tickFormat;\r\n        tickFormat = _;\r\n        return slider;\r\n    };\r\n\r\n    slider.value = function (_) {\r\n        if (!arguments.length) return value;\r\n        value = _;\r\n        return slider;\r\n    };\r\n\r\n    slider.showRange = function (_) {\r\n        if (!arguments.length) return range;\r\n        range = _;\r\n        return slider;\r\n    };\r\n\r\n    slider.callback = function (_) {\r\n        if (!arguments.length) return callbackFn;\r\n        callbackFn = _;\r\n        return slider;\r\n    };\r\n\r\n    slider.setValue = function (newValue) {\r\n        var pos = scale(newValue) + margin.left;\r\n        slider.move(pos);\r\n    };\r\n\r\n    slider.mousemove = function () {\r\n        var pos = d3.mouse(this)[0];\r\n        var val = slider.getNearest(scale.invert(pos), stepValues);\r\n        focus.attr(\"transform\", \"translate(\" + scale(val) + \",0)\");\r\n        focus.selectAll(\"text\").text(val);\r\n    };\r\n\r\n    slider.getNearest = function (val, arr) {\r\n        var l = arr.reduce(function (p, c, i, a) {\r\n            if (c < val) {\r\n                return c;\r\n            } else {\r\n                return p;\r\n            }\r\n        });\r\n        var u = arr[arr.indexOf(l) + 1];\r\n        var nearest = ((value - l) <= (u - value)) ? l : u;\r\n        return nearest;\r\n    };\r\n\r\n    slider.destroy = function () {\r\n        div.selectAll('svg').remove();\r\n        return slider;\r\n    }\r\n\r\n    slider.getAxis = function () {\r\n        var axis = d3.axisBottom()\r\n            .scale(scale)\r\n\r\n        if (ticks != 0) {\r\n            axis.ticks(ticks);\r\n            axis.tickSize(tickSize);\r\n        } else if (tickValues) {\r\n            axis.tickValues(tickValues);\r\n            axis.tickSize(tickSize);\r\n        } else {\r\n            axis.ticks(0);\r\n            axis.tickSize(0);\r\n        }\r\n        if (tickFormat) {\r\n            axis.tickFormat(tickFormat);\r\n        }\r\n\r\n        return axis;\r\n    };\r\n\r\n    slider.resize = function () {\r\n        if (resizeTimer !== undefined) {\r\n            clearTimeout(resizeTimer);\r\n        }\r\n\r\n        resizeTimer = d3.timeout(function () {\r\n            var divWidth = parseInt(div.style(\"width\"), 10);\r\n            width = divWidth - (margin.left + margin.right);\r\n            scale.range([0, width]);\r\n\r\n            svg.attr(\"width\", width + margin.left + margin.right);\r\n\r\n            svgGroup.select(\".d3slider-rect-range\")\r\n                .attr(\"width\", width)\r\n\r\n            if (range) {\r\n                svgGroup.select(\".d3slider-rect-value\")\r\n                    .attr(\"width\", scale(value))\r\n            }\r\n\r\n            dragger\r\n                .attr(\"transform\", function (d) {\r\n                    return \"translate(\" + scale(d) + \")\";\r\n                });\r\n\r\n            var axis = slider.getAxis();\r\n            axisGroup.call(axis);\r\n\r\n            console.log(div.attr(\"id\"));\r\n            console.log(width);\r\n        }, resizeInterval);\r\n\r\n        return slider;\r\n    };\r\n\r\n    slider.resizeInterval = function (_) {\r\n        if (!arguments.length) return resizeInterval;\r\n        resizeInterval = _;\r\n\r\n        return slider;\r\n    };\r\n\r\n    return slider;\r\n\r\n};\r\n\r\n\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./d3.slider/d3.slider.js\n// module id = 7\n// module chunks = 0","\"use strict\";\r\n\r\nimport * as d3 from \"d3\";\r\nimport * as moment from \"moment\";\r\nimport * as utility from \"utility\";\r\n\r\n// the likes per day view\r\nexport default class PerDayView {\r\n\tconstructor() {\r\n\t\tthis.margin_top = 80;\r\n\t\tthis.margin_bottom = 50;\r\n\t\tthis.margin_w = 25;\r\n\t\tthis.width  = 800 - this.margin_w * 2;\r\n\t\tthis.height = 460 - this.margin_top - this.margin_bottom - 10;\r\n\t\tthis.binsize = 1;\r\n\t}\r\n\r\n\tbin(newbin) {\r\n\t\tthis.binsize = newbin;\r\n\t\t// extract likes per day.\r\n\t\t// first, initialize each day.\r\n\t\tlet data = [];\r\n\t\tlet bindur = moment.duration(this.binsize, \"days\");\r\n\t\tlet startdate = getDate(this.mintime);\r\n\t\tlet enddate = getDate(this.maxtime);\r\n\t\twhile (startdate.clone().add(bindur) < enddate) {\r\n\t\t\tlet dstart = startdate.clone();\r\n\t\t\tlet dend   = startdate.clone().add(bindur);\r\n\t\t\tlet s1 = getDateString(dstart);\r\n\t\t\tlet s2 = getDateString(dend);\r\n\t\t\tdata.push({start: dstart, \r\n\t\t\t\t\t\t end: dend,\r\n\t\t\t\t\t \t count: 0,\r\n\t\t\t\t\t \t string: getDateRangeString(dstart, dend)});\r\n\t\t\tstartdate.add(bindur);\r\n\t\t}\r\n\r\n\t\tdata.push({start: startdate, \r\n\t\t\t\t\t end: enddate,\r\n\t\t\t\t \t count: 0,\r\n\t\t\t\t \t string: getDateRangeString(startdate, enddate)});\r\n\r\n\t\tfor (let time of this.alltimes) {\r\n\t\t\tlet day = getDate(time); // conversion puts dates into user timezone.\r\n\t\t\tfor(let bin of data) {\r\n\t\t\t\tif (bin.start <= day && day <= bin.end) {\r\n\t\t\t\t\tbin.count += 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.data = data;\r\n\r\n\t\t// Also create adjusted amounts\r\n\t\tfor (let i = 0; i < this.data.length; i++) {\r\n\t\t\tlet d = this.data[i];\r\n\t\t\tif (i == this.data.length - 1) {\r\n\t   \t\t\tlet days = d.end.diff(d.start, \"days\");\r\n\t   \t\t\tif (days != this.binsize){\r\n\t\t   \t\t\td.adj = d.count / days * this.binsize;\r\n\t\t   \t\t\td.adj = d.count + (d.adj - d.count) * .5 // discount estimate\r\n\t\t   \t\t\tcontinue;\r\n\t\t   \t\t}\r\n\t\t\t}\r\n\t\t\td.adj = d.count;\r\n\t\t}\r\n\r\n\t\t// also create sparkline data.\r\n\t\tthis.totallikes = arrsum(this.data, d=>d.count);\r\n\t\tthis.sparkdata = [];\r\n\t\tlet datanum = this.data.length;\r\n\t\tlet sum = 0;\r\n\t\tlet slope = this.totallikes / parseFloat(datanum);\r\n\t\tfor (let i = 0; i < datanum; i++) {\r\n\t\t\tlet date  = this.data[i].string;\r\n\t\t\tlet likes = this.data[i].count;\r\n\t\t\t// compare expected likes versus actual likes\r\n\t\t\t// let diff = likes - slope; // likes vs average likes\r\n\t\t\tsum += likes;\r\n\t\t\tlet diff = sum - (slope * (i+1));\r\n\t\t\tthis.sparkdata.push([date, diff]);\r\n\t\t}\r\n\t\tthis.sparkdataMagnitude = Math.abs(arrmax(this.sparkdata, d=>Math.abs(d[1]))[1]);\r\n\r\n\t\t// reset axes\r\n\r\n\t\t// find max like magnitude, then create scales & axes\r\n\t\tthis.maxlikes = arrmax(this.data, d=>d.adj).adj; // adj, to account for estimate\r\n\r\n\t\tthis.xscale = \r\n\t\t\td3.scaleBand()\r\n\t\t\t  .domain(this.data.map(d=>d.string))\r\n\t\t\t  .paddingOuter(10)\r\n\t\t\t  .paddingInner(this.binsize == 1 ? 0 : 0.1)\r\n\t\t\t  .range([0, this.width]);\r\n\t    this.yscale = \r\n\t\t\td3.scaleLinear()\r\n\t\t\t  .domain([0, Math.floor(this.maxlikes * 1.05)])\r\n\t\t\t  .range([0, this.height]);\r\n\t    // have to invert scale for y axis\r\n\t    this.yscale_axis = this.yscale\r\n\t    \t.copy()\r\n\t        .range([this.height, 1]);\r\n        // scale for trend height.\r\n\t\tthis.sparklinescale =\r\n\t\t\td3.scaleLinear()\r\n\t\t\t  .domain([-this.sparkdataMagnitude, this.sparkdataMagnitude])\r\n\t\t\t  .range([this.margin_bottom / 2, -this.margin_bottom / 2]);\r\n\r\n\t\tthis.xaxis =\r\n\t\t\td3.axisBottom(this.xscale)\r\n\t\tthis.yaxis =\r\n\t\t\td3.axisLeft(this.yscale_axis);\r\n\r\n\t\t// draw axes\r\n\t\tthis.svg.select(\".all\")\r\n\t\t    .attr(\"transform\", `translate(${this.margin_w}, ${this.margin_top})`)\r\n\t\tthis.svg.select(\".bars\");\r\n\t\tthis.svg.select(\".xaxis\")\r\n\t\t\t.transition()\r\n\t\t    .call(this.xaxis)\r\n\t\t    .attr(\"transform\", `translate(0, ${this.height})`);\r\n\t\tthis.svg.select(\".yaxis\")\r\n\t\t\t.transition()\r\n\t\t\t.call(this.yaxis);\r\n\r\n\t\tthis.sparkline = \r\n\t\t\td3.line()\r\n\t\t\t  .x(d=>this.xscale(d[0])+ this.xscale.bandwidth() / 2)\r\n\t\t\t  .y(d=>this.sparklinescale(d[1]));\r\n\t}\r\n\r\n\tsetup() {\r\n\t\tlet myself = this;\r\n\t\tthis.svg = d3.select(\"#perdayview\");\r\n\r\n\t\tthis.alltimes = [];\r\n\t\t// find time ranges.\r\n\t\tthis.mintime = dataset.posts.earliest;\r\n\t\tthis.maxtime = dataset.posts.latest;\r\n\t\tfor (let post of dataset.posts.posts) {\r\n\t\t\tfor (let like of post.likes.likes) {\r\n\t\t\t\tthis.alltimes.push(like.time);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet L = this.alltimes.length;\r\n\t\tif (L < 120)\r\n\t\t\tthis.bin(1);\r\n\t\telse if (L/7 < 120)\r\n\t\t\tthis.bin(7);\r\n\t\telse if (L/14 < 120)\r\n\t\t\tthis.bin(14)\r\n\t\telse if (L/30 < 120)\r\n\t\t\tthis.bin(30)\r\n\t\telse\r\n\t\t\tthis.bin(120);\r\n\r\n\t    // Create tooltip.\r\n\t    this.svg.select(\".sparkline\")\r\n\t    \t.append(\"circle\") // the dot on the sparkline\r\n\t    \t.classed(\"tooltipDot\", true)\r\n\t    \t.classed(\"tooltip\", true);\r\n\t    let tooltip = this.svg.select(\".tooltiptext\");\r\n\t    tooltip.style(\"display\", \"none\");\r\n\t    tooltip\r\n\t    \t.append(\"rect\")\r\n\t    \t.attr(\"width\" , \"100\")\r\n\t    \t.attr(\"height\", \"70\")\r\n\t    \t.attr(\"x\", -50)\r\n\t    \t.attr(\"y\", -45)\r\n\t    \t.attr(\"rx\", 5)\r\n\t    \t.attr(\"ry\", 5);\r\n\r\n\t\ttooltip\r\n\t\t    .append(\"text\")\r\n\t    \t.classed(\"tooltipline1\", true)\r\n\t    \t.classed(\"tooltiptext\", true)\r\n\t    \t.attr(\"y\", -25);\r\n\t    tooltip\r\n\t    \t.append(\"text\")\r\n\t    \t.classed(\"tooltipline2\", true)\r\n\t    \t.classed(\"tooltiptext\", true)\r\n\t    \t.attr(\"y\", -5);\r\n\t    tooltip\r\n\t    \t.append(\"text\")\r\n\t    \t.classed(\"tooltipline3\", true)\r\n\t    \t.classed(\"tooltiptext\", true)\r\n\t    \t.attr(\"y\", 15);\r\n\r\n\t    this.svg.select(\".all\")\r\n\t    \t.append(\"path\")\r\n\t    \t.classed(\"tooltipguide\", true)\r\n\t    \t.classed(\"tooltip\", true);\r\n\r\n\t\tthis.binsizes = [1, 7, 14, 30, 120, 365];\r\n\t\tthis.sliderticks = [1, 7, 14, 30, 60, 120];\r\n\t\tvar sliderFromBin = val=>{\r\n\t\t\tlet i = this.binsizes.indexOf(val);\r\n\t\t\treturn this.sliderticks[i];\r\n\t\t}\r\n\r\n\t\tvar binFromSlider = val=>{\r\n\t\t\tlet i = this.sliderticks.indexOf(val);\r\n\t\t\treturn this.binsizes[i];\r\n\t\t}\r\n\r\n\t\tlet slidertickformat = (d)=>{\r\n\t\t\td = binFromSlider(d);\r\n\t\t\tif (d == 1)\r\n\t\t\t\treturn \"1 day\"\r\n\t\t\tif (d < 30)\r\n\t\t\t\treturn d + \" days\";\r\n\t\t\tif (d == 30)\r\n\t\t\t\treturn \"1 month\";\r\n\t\t\tif (d == 120)\r\n\t\t\t\treturn \"4 months\";\r\n\t\t\tif (d == 365)\r\n\t\t\t\treturn \"1 year\";\r\n\t\t}\r\n\r\n    \tthis.slider = d3\r\n    \t\t.slider()\r\n    \t\t.min(this.sliderticks[0])\r\n    \t\t.max(this.sliderticks[this.sliderticks.length - 1])\r\n    \t\t.tickValues(this.sliderticks)\r\n    \t\t.stepValues(this.sliderticks)\r\n    \t\t.value(sliderFromBin(this.binsize))\r\n    \t\t.tickFormat(slidertickformat)\r\n    \t\t.callback(()=>{\r\n    \t\t\tlet val = this.slider.value();\r\n    \t\t\tval = binFromSlider(val);\r\n    \t\t\tif (this.alltimes.length / val >= 1) {\r\n\t\t    \t\tthis.bin(this.slider.value());\r\n\t\t    \t\tthis.update();\r\n    \t\t\t}\r\n\t    \t});\r\n\r\n\t    // Hook up controls.\r\n\t    d3.select(\"#binslider\")\r\n    \t  .call(this.slider);\r\n\r\n\t\t// also add sparkline\r\n\t\tlet sparkline = this.svg.select(\".sparkline\")\r\n\t\t    .attr(\"transform\", `translate(0, ${this.height + this.margin_bottom / 2})`);\r\n\t\tsparkline\r\n\t\t    .append(\"line\")\r\n\t\t\t.classed(\"normalline\", true)\r\n\t\t    .attr(\"x1\", 0)\r\n\t\t    .attr(\"x2\", this.width)\r\n\t\t    .attr(\"y1\", 0)\r\n\t\t    .attr(\"y2\", 0);\r\n\t\tsparkline\r\n\t\t\t.append(\"path\")\r\n\t\t\t.classed(\"dataline\", true);\r\n\t}\r\n\r\n\tupdate() {\r\n\t\tlet sel = this.svg\r\n\t\t\t.select(\".bars\")\r\n\t\t\t.selectAll(\".view1bargroup\")\r\n\t\t\t.data(this.data);\r\n\t\tlet myself = this;\r\n\t\tsel.exit().remove();\r\n\t\tlet enter = sel\r\n\t\t\t.enter()\r\n\t   \t\t.append(\"g\")\r\n\t   \t\t.classed(\"view1bargroup\", true)\r\n\t   \t\t.attr(\"transform\", d=>`translate(${this.xscale(d.string)}, 0)`);\r\n\t   \tenter\r\n\t   \t\t.append(\"rect\")\r\n\t   \t\t.classed(\"view1barback\", true);\r\n\t   \tenter\r\n\t        .append(\"rect\")\r\n\t        .classed(\"view1bar\", true);\r\n\t    enter\r\n\t        .append(\"rect\")\r\n\t        .classed(\"transbars\", true)\r\n\t        .attr(\"height\", this.height + this.margin_bottom)\r\n\t\t    .on(\"mouseover\", function(d, i){\r\n\t\t   \t\tmyself.svg.selectAll(\".tooltip\").style(\"display\", \"inherit\");\r\n\t\t   \t\td = myself.data[i];\r\n\t\t   \t\tlet sparkline_y = myself.sparklinescale(myself.sparkdata[i][1]);\r\n\t\t\t\tmyself.svg.select(\".tooltipDot\")\r\n\t\t\t\t\t.attr(\"cx\", myself.xscale(d.string) + myself.xscale.bandwidth() / 2)\r\n\t\t\t\t\t.attr(\"cy\", sparkline_y)\r\n\t\t\t\t\t.attr(\"r\" , 3);\r\n\t\t\t\t// distance from top of bar to sparkline.\r\n\t\t\t\tlet y = myself.height - myself.yscale(d.adj);\r\n\t\t\t\tlet x = myself.xscale(d.string) + myself.xscale.bandwidth() / 2;\r\n\t\t\t\tlet len = myself.yscale(d.adj) + (sparkline_y - myself.margin_bottom / 2);\r\n\t\t\t\tmyself.svg.select(\".tooltipguide\")\r\n\t\t\t\t\t.attr(\"d\", `M${x},${y}L${x},${myself.height + myself.margin_bottom}`);\r\n\r\n\t\t\t\t// need to find text width to center.\r\n\t\t\t\tlet line1_w = getTextWidth(d.string, '\"Open Sans\" 12pt');\r\n\t\t\t\tlet line2_w = getTextWidth(d.count + \" likes\", '\"Open Sans\" 12pt');\r\n\t\t\t\tlet align_left = line1_w - line2_w;\r\n\t\t\t\tmyself.svg.select(\".tooltipline1\").text(getDateString(d.start));\r\n\t\t\t\tmyself.svg.select(\".tooltipline2\").text(getDateString(d.end));\r\n\t\t\t\tmyself.svg.select(\".tooltipline3\").text(d.count + \" likes\");\r\n\r\n\t\t\t\t// also move the entire tooltip\r\n\t\t\t\tmyself.svg.select(\".tooltiptext\")\r\n\t\t\t\t\t.attr(\"transform\", `translate(${x},${y - 30})`);\r\n\t\t   });\r\n\r\n\t\t// time for the update selection\r\n\t    sel = sel.merge(enter);\r\n\r\n\t    // need to manually assign datums due to structure of program\r\n\t    sel.each(function(d){\r\n\t   \t\t\tlet t = d3.select(this);\r\n\t   \t\t\tt.select(\".view1bar\")\r\n\t   \t\t\t .datum(d);\r\n\t   \t\t\tt.select(\".view1barback\")\r\n\t   \t\t\t .datum(d);;\r\n\t   \t\t})\r\n\r\n\t    sel.transition()\r\n\t   \t   .attr(\"transform\", d=>`translate(${this.xscale(d.string)}, 0)`);\r\n\r\n\t\tsel.selectAll(\".view1barback\")\r\n   \t       .transition()\r\n   \t       .attr(\"width\", d=>this.xscale.bandwidth())\r\n\t\t   .attr(\"height\", d=>this.yscale(d.adj))\r\n\t\t   .attr(\"y\", d=>this.height-this.yscale(d.adj));\r\n\r\n\r\n\t   \tsel.selectAll(\".view1bar\")\r\n\t   \t   .transition()\r\n\t\t   .attr(\"width\", d=>this.xscale.bandwidth())\r\n\t\t   .attr(\"height\", d=>this.yscale(d.count))\r\n\t\t   .attr(\"y\", d=>this.height-this.yscale(d.count));\r\n\r\n\t   \tsel.selectAll(\".transbars\")\r\n\t        .attr(\"width\", d=>this.xscale.bandwidth());\r\n\r\n\t    this.svg.select(\"rect\")\r\n\t        .on(\"click\", function(){\r\n\t\t   \t\tmyself.svg.selectAll(\".tooltip\").style(\"display\", \"none\");\r\n\t        })\r\n\r\n\t    this.svg.select(\".dataline\")\r\n\t\t\t.datum(this.sparkdata)\r\n\t\t\t.attr(\"d\", this.sparkline);\r\n\t}\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/View-PerDay.js\n// module id = 8\n// module chunks = 0","\"use strict\";\r\n\r\nimport * as d3 from \"d3\";\r\nimport * as moment from \"moment\";\r\nimport * as utility from \"utility\";\r\n\r\n// the likes per chapter per user view, as well as chapter.\r\nexport default class UserView {\r\n\tconstructor() {\r\n\t\tthis.margin_top = 0;\r\n\t\tthis.margin_bottom = 100;\r\n\t\tthis.margin_w = 25;\r\n\t\tthis.width  = 600 - this.margin_w * 2;\r\n\t\tthis.height = 550 - this.margin_top - this.margin_bottom;\r\n\t\tthis.tolerence = 0;\r\n\t\tthis.algoname = \"damerau\";\r\n\t\tif (this.algoname == \"damerau\") {\r\n\t\t\tthis.algo = damerau;\r\n\t\t} else {\r\n\t\t\tthis.algo = levenshtein;\r\n\t\t}\r\n\t\tthis.innerpadding = 7; // distance between clusters\r\n\r\n\t\tthis.subgraph_height = 50;\r\n\t\tthis.subgraph_margintop = 40;\r\n\t}\r\n\r\n\tsetup() {\r\n\t\tthis.svg = d3.select(\"#userview\");\r\n\t\tthis.userlikes = {};\r\n\t\tthis.usernames = {};\r\n\t\tthis.chapterinfo = [];\r\n\r\n\t\t// put all users in userdata since need to cmp strings\r\n\t\tfor (let post of dataset.posts.posts) {\r\n\t\t\tlet postobj = {};\r\n\t\t\tpostobj.id = post.id;\r\n\t\t\tpostobj.title = post.title;\r\n\t\t\tpostobj.likes = [];\r\n\t\t\tfor (let like of post.likes.likes) {\r\n\t\t\t\tlet userid = like.user.id;\r\n\t\t\t\tpostobj.likes.push(String(userid));\r\n\t\t\t\tthis.usernames[userid] = like.user.name;\r\n\t\t\t\tthis.userlikes[userid] = \"\";\r\n\t\t\t}\r\n\t\t\tthis.chapterinfo.push(postobj);\r\n\t\t}\r\n\r\n\t\t// Need to tally likes per user, as well as chapter like sums\r\n\t\tfor (let post of this.chapterinfo) {\r\n\t\t\tfor (let userid in this.usernames) {\r\n\t\t\t\tif (post.likes.indexOf(userid) >= 0)\r\n\t\t\t\t\tthis.userlikes[userid] += \"x\";\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.userlikes[userid] += \" \";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Set tolerence to 10% of chapters or 2, whichever is larger.\r\n\t\tthis.tolerence = Math.max(this.chapterinfo.length * 0.1, 5);\r\n\r\n\t\tthis.usernames_arr = []\r\n\t\tfor (let userid in this.usernames) {\r\n\t\t\tthis.usernames_arr.push([userid, this.usernames[userid]]);\r\n\t\t}\r\n\r\n\t\t// cluster similar likes, starting from the max \"x\"s\r\n\t\tthis.clustered = [];\r\n\t\t// enumerate object for lufu\r\n\t\tthis.user_userlikes = [];\r\n\t\tfor (let userid in this.userlikes) {\r\n\t\t\tthis.user_userlikes.push([userid, this.userlikes[userid]]);\r\n\t\t}\r\n\t\tthis.clustered = lufu_cluster(this.user_userlikes, this.tolerence, this.algo);\r\n\r\n\t\t// sort each cluster. renumber.\r\n\t\tlet counter = this.usernames_arr.length - 1;\r\n\t\tfor (let cluster of this.clustered) {\r\n\t\t\tcluster.sort((a, b)=>{\r\n\t\t\t\t// start from back\r\n\t\t\t\ta = a[1];\r\n\t\t\t\tb = b[1];\r\n\t\t\t\tfor(let i = a.length - 1; 0 <= i; i--) {\r\n\t\t\t\t\tif (a[i] != b[i]) {\r\n\t\t\t\t\t\tif (a[i] == \"x\") return -1;\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t});\r\n\r\n\t\t\tfor (let element of cluster) {\r\n\t\t\t\telement[2] = counter--;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// set scale\r\n\t\tlet domain = [];\r\n\t\tfor (let j = 0; j < this.chapterinfo.length; j++) {\r\n\t\t\tdomain.push(j);\r\n\t\t}\r\n\r\n\t\tthis.xscale =\r\n\t\t\td3.scaleBand()\r\n\t\t\t  .domain(domain)\r\n\t\t\t  //.paddingOuter(10)\r\n\t\t\t  .range([0, this.width]);\r\n\t    this.yscale = \r\n\t    \td3.scaleLinear()\r\n\t    \t  .domain([0, this.usernames_arr.length])\r\n\t    \t  .range([0, this.height]);\r\n\t    // for subgraph\r\n\t    this.likesmax = arrmax(this.chapterinfo, d=>d.likes.length).likes.length;\r\n\t    this.sub_yscale = \r\n\t    \td3.scaleLinear()\r\n\t    \t  .domain([0, this.likesmax])\r\n\t    \t  .range([this.subgraph_height, 0]);\r\n\r\n\t    this.xaxis = \r\n\t    \td3.axisBottom(this.xscale);\r\n\r\n\t    this.subyaxis =\r\n\t    \td3.axisLeft(this.sub_yscale)\r\n\t    \t  .ticks(3);\r\n\r\n\t\tthis.svg\r\n\t\t\t.select(\".yaxis\")\r\n\t\t\t.call(this.xaxis)\r\n\t\t\t.attr(\"transform\", `translate(0, ${this.height + 2 + this.innerpadding * this.clustered.length})`)\r\n\t\t\t.append(\"text\")\r\n\t\t\t.classed(\"axislabel\", true)\r\n\t\t\t.attr(\"x\", this.width - this.margin_w)\r\n\t\t\t.attr(\"y\", 30)\r\n\t\t\t.text(\"Chapters\");\r\n\t\tthis.svg.select(\".all\")\r\n\t\t\t.attr(\"transform\", `translate(${this.margin_w}, ${this.margin_top})`)\r\n\t}\r\n\r\n\tupdate() {\r\n\t\tlet me = this;\r\n\t\tlet clusters = this.svg\r\n\t\t\t.select(\".bars\")\r\n\t\t\t.selectAll(\".cluster\")\r\n\t\t\t.data(this.clustered);\r\n\t\tlet clusterenter = clusters\r\n\t\t\t.enter()\r\n\t\t\t.append(\"g\")\r\n\t\t\t.classed(\"cluster\", true);\t\t\r\n\r\n\t\tclusters = clusters.merge(clusterenter);\r\n\r\n\t\tclusters\r\n\t\t\t.attr(\"data-index\", (d,i)=>i)\r\n\t\t\t.classed(\"odd\", (d,i)=>i % 2 == 1)\r\n\t\t\t.classed(\"even\", (d,i)=>i % 2 == 0);\r\n\r\n\t\tlet bars = clusters\r\n\t\t\t.selectAll(\".userbar\")\r\n\t\t\t.data(d=>d);\r\n\r\n\t\tbars = bars.enter()\r\n\t\t\t.append(\"g\")\r\n\t\t\t.classed(\"userbar\", true)\r\n\t\t\t.merge(bars);\r\n\r\n\t\tbars.attr(\"transform\", function(d){\r\n\t\t\tlet i = +this.parentNode.getAttribute(\"data-index\");\r\n\t\t\treturn `translate(0, ${me.yscale(d[2]) + (me.clustered.length - i) * me.innerpadding})`\r\n\t\t});\r\n\r\n\t\tlet sqrs = bars\r\n\t\t\t.selectAll(\".barsquare\", true)\r\n\t\t\t.data(d=>d[1]);\r\n\t\tsqrs = sqrs.enter()\r\n\t\t\t.append(\"rect\")\r\n\t\t\t.classed(\"barsquare\", true)\r\n\t\t\t.attr(\"width\", this.xscale.bandwidth())\r\n\t\t\t.attr(\"height\", this.yscale(1))\r\n\t\t\t.merge(sqrs);\r\n\t\tsqrs.attr(\"opacity\", d=>d == \"x\" ? 1 : 0)\r\n\t\t\t.attr(\"x\", (d, i)=>this.xscale(i));\r\n\r\n\t\t// add the rectangles to the rectangle div.\r\n\t\tlet clusterboxes = \r\n\t\t\tthis.svg.select(\".boxes\")\r\n\t\t\t\t.selectAll(\".clusterbox\")\r\n\t\t\t\t.data(this.clustered);\r\n\t\tclusterboxes\r\n\t\t\t.enter()\r\n\t\t\t.append(\"rect\")\r\n\t\t\t.classed(\"clusterbox\", true)\r\n\t\t\t.classed(\"odd\", (d,i)=>i % 2 == 1)\r\n\t\t\t.classed(\"even\", (d,i)=>i % 2 == 0)\r\n\t\t\t.attr(\"transform\", (d,i)=>`translate(0, ${(this.clustered.length - i)  * me.innerpadding})`)\r\n\t\t\t.attr(\"width\", this.width)\r\n\t\t\t.attr(\"y\", (d, i)=>{\r\n\t\t\t\t// y pos is equal to smallest y pos\r\n\t\t\t\tlet el = arrmin(d, d=>this.yscale(d[2]));\r\n\t\t\t\treturn this.yscale(el[2]);\r\n\t\t\t})\r\n\t\t\t.attr(\"height\", (d,i)=>{\r\n\t\t\t\t// height is equal to diff between \r\n\t\t\t\t// largest and smallest ypos\r\n\t\t\t\tlet M = arrmax(d, d=>this.yscale(d[2]));\r\n\t\t\t\tlet m = arrmin(d, d=>this.yscale(d[2]));\r\n\t\t\t\treturn this.yscale(M[2]) - this.yscale(m[2]) + this.yscale(1);\r\n\t\t\t})\r\n\t\t\t.on(\"mouseover\", function(d){\r\n\t\t\t\td3.select(\"#userlistdiv\").style(\"color\", undefined);\r\n\t\t\t\t// user count\r\n\t\t\t\td3.select(\"#numusers\").text(d.length);\r\n\t\t\t\tlet p = d.length / parseFloat(me.usernames_arr.length) * 100;\r\n\t\t\t\tp = n_digits(p, 1);\r\n\t\t\t\td3.select(\"#percentusers\").text(p);\r\n\t\t\t\t// like count\r\n\t\t\t\tlet arr = d.map(el=>{\r\n\t\t\t\t\treturn (el[1].match(/x/g) || []).length;\r\n\t\t\t\t});\r\n\t\t\t\tlet average = arrsum(arr) / arr.length;\r\n\t\t\t\td3.select(\"#averagelikes\").text(n_digits(average, 1));\r\n\t\t\t\tp = average / me.chapterinfo.length * 100;\r\n\t\t\t\td3.select(\"#percentliked\").text(n_digits(p, 1));\r\n\t\t\t\t// append user list\r\n\t\t\t\tlet usernames = \r\n\t\t\t\t\td.map(d=>me.usernames[d[0]])\r\n\t\t\t\t\t .sort((a, b)=>{\r\n\t\t\t\t\t \ta = a.toLowerCase();\r\n\t\t\t\t\t \tb = b.toLowerCase();\r\n\t\t\t\t\t \tif (a > b) return 1;\r\n\t\t\t\t\t \tif (a < b) return -1;\r\n\t\t\t\t\t \treturn 0;\r\n\t\t\t\t\t });\r\n\r\n\t\t\t\td3.select(\"#userlist\")\r\n\t\t\t\t  .html(\"\")\r\n\t\t\t\t  .selectAll(\".username\")\r\n\t\t\t\t  .data(usernames)\r\n\t\t\t\t  .enter()\r\n\t\t\t\t  .append(\"span\")\r\n\t\t\t\t  .classed(\"username\", true)\r\n\t\t\t\t  .text(d=>d);\r\n\t\t\t});\r\n\r\n\t\t// populate like sub-graph \r\n\t\tlet band = this.xscale.bandwidth();\r\n\t\tlet likeline = \r\n\t\t\td3.line()\r\n\t\t\t  .x((d,i)=>this.xscale(i) + band/2)\r\n\t\t\t  .y(d=>this.sub_yscale(d.likes.length));\r\n\r\n\t\tlet likes = this.svg.select(\".likegraph\");\r\n\t\tlet ypos = this.height + this.innerpadding * this.clustered.length + this.subgraph_margintop;\r\n\t\tlikes.attr(\"transform\", `translate(0, ${ypos})`)\r\n\t\tlikes.append(\"path\")\r\n\t\t\t.classed(\"likeline\", true)\r\n\t\t\t.datum(this.chapterinfo)\r\n\t\t\t.attr(\"d\", likeline);\r\n\t\tlikes.append(\"line\")\r\n\t\t\t.classed(\"bottomline\", true)\r\n\t\t\t.attr(\"x1\", this.xscale(0) + band/2)\r\n\t\t\t.attr(\"x2\", this.xscale(this.chapterinfo.length - 1) + band/2)\r\n\t\t\t.attr(\"y1\", this.sub_yscale(0) + 1)\r\n\t\t\t.attr(\"y2\", this.sub_yscale(0) + 1);\r\n\t\tlet subxaxis = \r\n\t\t\tlikes.append(\"g\")\r\n\t\t\t\t.classed(\"subxaxis\", true)\r\n\t\t\t\t.call(this.subyaxis)\r\n\t\t\t\t.attr(\"transform\", \"translate(12, 0)\");\r\n\t\tsubxaxis\r\n\t\t\t.append(\"text\")\r\n\t\t\t.classed(\"label\", true)\r\n\t\t\t.attr(\"text-anchor\", \"middle\")\r\n\t\t\t.attr(\"x\", this.width / 2 - 12)\r\n\t\t\t.attr(\"y\", this.subgraph_height + 13)\r\n\t\t\t.text(\"Likes per chapter\")\r\n\t}\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/View-User.js\n// module id = 9\n// module chunks = 0","\"use strict\";\r\n\r\nimport * as d3 from \"d3\";\r\nimport * as moment from \"moment\";\r\nimport * as utility from \"utility\";\r\n\r\n// the likes over time for the first 24h view\r\nexport default class FirstImpressionsView {\r\n\tconstructor() {\r\n\t\tthis.margin_top = 30;\r\n\t\tthis.margin_bottom = 30;\r\n\t\tthis.margin_w = 25;\r\n\t\tthis.width  = 800 - this.margin_w;\r\n\t\tthis.height = 350 - this.margin_top - this.margin_bottom;\r\n\t\tthis.markwidth = 50;\r\n\t\tthis.markmargin = 5;\r\n\t\tthis.scroll = 0; // amount scrolls\r\n\t\tthis.terminalheight = 20; // how much below 48 hours to draw terminal width\r\n\t}\r\n\r\n\tresize() {\r\n\t\td3.select(\"#firstimpressionview\").attr(\"width\", window.innerWidth * .9);\r\n\t}\r\n\r\n\t// Regenerate shapes and axes\r\n\tgenerateShapes() {\r\n\r\n\t}\r\n\r\n\tsetWindow(windowsize) {\r\n\t\tthis.windowsize = windowsize;\r\n\t\tthis.generateShapes();\r\n\t}\r\n\r\n\t// change timezone for axis (default UTC+0)\r\n\tsetTimezone(timezone) {\r\n\t\tthis.timezone = timezone;\r\n\t\tthis.generateShapes();\r\n\t}\r\n\r\n\tsetup() {\r\n\t\tthis.svg = d3.select(\"#firstimpressionview\");\r\n\t\td3.select(window)\r\n\t\t  .on(\"resize.fiv\", this.resize);\r\n\t\tthis.resize();\r\n\r\n\t\tthis.windowsize = 24;\r\n\t\tthis.timezone = 0;\r\n\t\tthis.generateShapes();\r\n\r\n\t\t// Create scales and axes\r\n\t\tthis.yscale = d3.scaleLinear()\r\n\t\t\t.domain([0, moment.duration(2, \"days\").asMilliseconds()])\r\n\t\t\t.range([0, this.height]);\r\n\t\tlet ticks = [];\r\n\t\tfor (let i = 0; i < 24; i++) {\r\n\t\t\tticks.push(i * moment.duration(2, \"hours\").asMilliseconds());\r\n\t\t}\r\n\t\tthis.yaxis = d3.axisLeft(this.yscale)\r\n\t\t\t.tickValues(ticks)\r\n\t\t\t.tickFormat(d=>moment({y:2015, M:1, d:15}).add(d, \"ms\").format(\"HH\"));\r\n\t\tthis.xscale = i=>(this.markwidth + this.markmargin) * i + 0.5 * this.markwidth;\r\n\r\n\t\t// Want to extract pertinent information\r\n\t\tlet posts = dataset.posts.posts;\r\n\t\tlet data = [];\r\n\t\tfor (let post of posts) {\r\n\t\t\tlet obj = {};\r\n\t\t\tobj.time = moment(post.time);\r\n\t\t\tobj.title = post.title;\r\n\t\t\tlet likes = [];\r\n\t\t\tfor (let like_src of post.likes.likes) {\r\n\t\t\t\tlet like_dst = {};\r\n\t\t\t\tlike_dst.userid = like_src.user.id;\r\n\t\t\t\tlike_dst.username = like_src.user.name;\r\n\t\t\t\tlike_dst.time = like_src.time;\r\n\t\t\t\tlikes.push(like_dst);\r\n\t\t\t}\r\n\t\t\tarrsort(likes, false, d=>d.time);\r\n\t\t\tfor (let like of likes)\r\n\t\t\t\tlike.time = moment(like.time);\r\n\t\t\tobj.likes = likes;\r\n\t\t\t// find only likes that are within 24h\r\n\t\t\tfor (let i = 0; i < obj.likes.length; i++) {\r\n\t\t\t\tlet like = obj.likes[i];\r\n\t\t\t\tif (like.time.diff(obj.time) >= moment.duration(1, \"day\").asMilliseconds()) {\r\n\t\t\t\t\tobj.cappedlikes = obj.likes.slice(0, i);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// make area generator\r\n\t\t\tobj.markscale = d3.scaleLinear()\r\n\t\t\t\t.domain([0, obj.likes.length])\r\n\t\t\t\t.range([0, this.markwidth]);\r\n\r\n\t\t\tobj.areagen = d3.area()\r\n\t\t\t\t.x0((d,i)=>-0.5 * obj.markscale(i))\r\n\t\t\t\t.x1((d,i)=> 0.5 * obj.markscale(i))\r\n\t\t\t\t.y0((d,i)=>this.yscale(d.time.clone().diff(obj.time)))\r\n\t\t\t\t.y1((d,i)=>this.yscale(d.time.clone().diff(obj.time)));\r\n\t\t\tdata.push(obj);\r\n\t\t}\r\n\t\tthis.data = data;\r\n\r\n\t\t// Initialize\r\n\t\tlet svg = this.svg;\r\n\t\tsvg.select(\".all\")\r\n\t\t   .attr(\"transform\", `translate(${this.margin_w}, ${this.margin_top})`);\r\n\t\tsvg.select(\".yaxis\")\r\n\t\t   .call(this.yaxis);\r\n\r\n\t    this.drag = d3.drag()\r\n\t    \t.on(\"drag\", d=>{\r\n\t    \t\tthis.scroll += d3.event.dx;\r\n\t    \t\tthis.svg\r\n\t    \t\t\t.select(\".marks_drag\")\r\n\t    \t\t\t.attr(\"transform\", `translate(${this.scroll}, 0)`);\r\n\t    \t})\r\n\r\n\t    svg.select(\".drag_hitbox\")\r\n\t       .call(this.drag);\r\n\r\n        // adding slider...\r\n\t\tthis.binsizes = [24, 24 * 2, 24 * 3, 24 * 7, 24 * 14];\r\n\t\tthis.sliderticks = [24, 24 * 2, 24 * 3, 24 * 7, 24 * 14];\r\n\t\tvar sliderFromBin = val=>{\r\n\t\t\tlet i = this.binsizes.indexOf(val);\r\n\t\t\treturn this.sliderticks[i];\r\n\t\t}\r\n\r\n\t\tvar binFromSlider = val=>{\r\n\t\t\tlet i = this.sliderticks.indexOf(val);\r\n\t\t\treturn this.binsizes[i];\r\n\t\t}\r\n\r\n\t\tlet slidertickformat = (d)=>{\r\n\t\t\td = binFromSlider(d);\r\n\t\t\tif (d <= 48)\r\n\t\t\t\treturn d + \" hours\";\r\n\t\t\treturn d/24 + \" days\";\r\n\t\t}\r\n\r\n    \tthis.slider = d3\r\n    \t\t.slider()\r\n    \t\t.min(this.sliderticks[0])\r\n    \t\t.max(this.sliderticks[this.sliderticks.length - 1])\r\n    \t\t.tickValues(this.sliderticks)\r\n    \t\t.stepValues(this.sliderticks)\r\n    \t\t.value(sliderFromBin(this.binsize))\r\n    \t\t.tickFormat(slidertickformat)\r\n    \t\t.callback(()=>{\r\n    \t\t\tlet val = this.slider.value();\r\n    \t\t\tval = binFromSlider(val);\r\n    \t\t\tif (this.alltimes.length / val >= 1) {\r\n\t\t    \t\t// this.bin(this.slider.value());\r\n\t\t    \t\t// this.update();\r\n    \t\t\t}\r\n\t    \t});\r\n\r\n\t    // Hook up controls.\r\n\t    d3.select(\"#firstimpressions_windowslider\")\r\n    \t  .call(this.slider);\r\n\t}\r\n\r\n\t// take in chapter obj, return area path for longtail. \r\n\tdrawLongtail(datum) {\r\n\t\t// Areagen mirrors right sided to left.\r\n\t\tlet a = d3.area()\r\n\t\t\t.x0(d=>-d[0])\r\n\t\t\t.x1(d=>d[0])\r\n\t\t\t.y0(d=>d[1])\r\n\t\t\t.y1(d=>d[1])\r\n\t\t\t.curve(d3.curveBasis);\r\n\t\tlet numlikes = datum.cappedlikes.length;\r\n\t\tlet lastlike = datum.cappedlikes[numlikes - 1];\r\n\t\tlet tail_start = this.yscale(lastlike.time.clone().diff(datum.time));\r\n\t\tlet time_above_cap = makeTimeOnlyMoment(datum.time).diff(moment(\"2015-01-15\"));\r\n\t\tlet tail_end = this.yscale(moment.duration(2, \"day\").asMilliseconds() - time_above_cap);\r\n\t\tlet half_width = datum.markscale(numlikes) * 0.5;\r\n\t\tlet half_final = 0.5 * this.markwidth;\r\n\r\n\t\treturn a([\r\n\t\t\t[half_width, tail_start],\r\n\t\t\t[half_width * 0.8 + half_final * 0.2, tail_end * 0.7 + tail_start * 0.3],\r\n\t\t\t[half_final, tail_end + this.terminalheight]\r\n\t\t]);\r\n\t}\r\n\r\n\tupdate() {\r\n\t\tlet me = this;\r\n\t\tlet sel = this.svg.select(\".marks\")\r\n\t\t\t.selectAll(\".mark\")\r\n\t\t\t.data(this.data);\r\n\t\tsel.enter()\r\n\t\t   .append(\"g\")\r\n\t\t   .classed(\"mark\", true)\r\n\t\t   .attr(\"transform\", (d,i)=>{\r\n\t\t   \t\tlet dur = makeTimeOnlyMoment(d.time).diff(moment(\"2015-01-15\"));\r\n\t\t   \t\treturn `translate(${this.xscale(i)},${this.yscale(dur)+4})`;\r\n\t\t\t})\r\n\t\t   .each(function(d, i) {\r\n\t\t   \t\tif (i == 0) {\r\n\t\t   \t\t\tconsole.log(d);\r\n\t\t   \t\t}\r\n\r\n\t\t   \t\tlet sel = d3.select(this);\r\n\t\t   \t\t// Draw the long tail\r\n\t\t   \t\tsel.append(\"path\")\r\n\t\t   \t\t   .classed(\"longtail\", true)\r\n\t\t   \t\t   // four corners, starting top-left\r\n\t\t   \t\t   .attr(\"d\", me.drawLongtail(d));\r\n\r\n\t\t   \t\t// append the main mark\r\n\t\t   \t\tsel.append(\"path\")\r\n\t\t   \t\t   .classed(\"markpath\", true)\r\n\t\t   \t\t   .attr(\"d\", d.areagen(d.cappedlikes));\r\n\t   \t\t    // append the start time\r\n\t   \t\t    sel.append(\"circle\")\r\n\t   \t\t       .classed(\"markcap\", true)\r\n\t   \t\t       .attr(\"cx\", 0)\r\n\t   \t\t       .attr(\"cy\", 0)\r\n\t   \t\t       .attr(\"r\", 2.5);\r\n\t\t   });\r\n\t}\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/View-FirstImpressions.js\n// module id = 10\n// module chunks = 0"],"sourceRoot":""}